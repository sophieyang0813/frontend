sudo: required

language: node_js
node_js:
  - lts/*

before_install:
  - curl https://install.meteor.com | /bin/sh
  - export PATH="$HOME/.meteor:$PATH"
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - curl -o $HOME/.local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest && chmod +x $HOME/.local/bin/ecs-cli

cache:
  directories:
    - node_modules

install:
  - meteor npm install

script:
  - npm t
  - 'sed -i "s/<\!-- COMMIT: -->/<\!-- COMMIT: $COMMIT -->/g" client/main.html'
  - meteor build $HOME
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then aws s3 cp --acl public-read $HOME/frontend.tar.gz s3://unee-t-media/frontend/commit/${COMMIT}.tar.gz; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then aws s3 cp --acl public-read $HOME/frontend.tar.gz s3://unee-t-media/frontend/${TRAVIS_BRANCH}.tar.gz; fi'

# https://docs.travis-ci.com/user/deployment/script/
deploy:
 - provider: script
   script: AWS_ACCESS_KEY_ID=$AWS_812644853088_ID AWS_SECRET_ACCESS_KEY=$AWS_812644853088_SECRET ./deploy.sh
   skip_cleanup: true
   on:
     branch: master
 - provider: script
   # deploy to production, given that it's a tagged commit
   script: AWS_ACCESS_KEY_ID=$AWS_192458993663_ID AWS_SECRET_ACCESS_KEY=$AWS_192458993663_SECRET ./deploy.sh -p
   skip_cleanup: true
   on:
     tags: true
 - provider: script
   # deploy to demo, given that it's a tagged commit
   script: AWS_ACCESS_KEY_ID=$AWS_915001051872_ID AWS_SECRET_ACCESS_KEY=$AWS_915001051872_SECRET ./deploy.sh -d
   skip_cleanup: true
   on:
     tags: true

env:
  global:
  - COMMIT=${TRAVIS_COMMIT::7}
